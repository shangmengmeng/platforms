<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.star.platforms.dao.ChatUserMapper">
  <resultMap id="BaseResultMap" type="com.star.platforms.model.ChatUser">
    <constructor>
      <idArg column="uid" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="userId" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="nikename" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="offline" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="create_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="type" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="avatar" javaType="java.lang.String" jdbcType="VARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    uid, userId, nikename, offline, create_time, type, avatar
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from chat_user
    where uid = #{uid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from chat_user
    where uid = #{uid,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.star.platforms.model.ChatUser">
    insert into chat_user (uid, userId, nikename, 
      offline, create_time, type, 
      avatar)
    values (#{uid,jdbcType=VARCHAR}, #{userid,jdbcType=VARCHAR}, #{nikename,jdbcType=VARCHAR}, 
      #{offline,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{type,jdbcType=INTEGER}, 
      #{avatar,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.star.platforms.model.ChatUser">
    insert into chat_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="uid != null">
        uid,
      </if>
      <if test="userid != null">
        userId,
      </if>
      <if test="nikename != null">
        nikename,
      </if>
      <if test="offline != null">
        offline,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="avatar != null">
        avatar,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="uid != null">
        #{uid,jdbcType=VARCHAR},
      </if>
      <if test="userid != null">
        #{userid,jdbcType=VARCHAR},
      </if>
      <if test="nikename != null">
        #{nikename,jdbcType=VARCHAR},
      </if>
      <if test="offline != null">
        #{offline,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="avatar != null">
        #{avatar,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.star.platforms.model.ChatUser">
    update chat_user
    <set>
      <if test="userid != null">
        userId = #{userid,jdbcType=VARCHAR},
      </if>
      <if test="nikename != null">
        nikename = #{nikename,jdbcType=VARCHAR},
      </if>
      <if test="offline != null">
        offline = #{offline,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="avatar != null">
        avatar = #{avatar,jdbcType=VARCHAR},
      </if>
    </set>
    where uid = #{uid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.star.platforms.model.ChatUser">
    update chat_user
    set userId = #{userid,jdbcType=VARCHAR},
      nikename = #{nikename,jdbcType=VARCHAR},
      offline = #{offline,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      type = #{type,jdbcType=INTEGER},
      avatar = #{avatar,jdbcType=VARCHAR}
    where uid = #{uid,jdbcType=VARCHAR}
  </update>
</mapper>